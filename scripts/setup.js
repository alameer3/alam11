#!/usr/bin/env node

const { exec } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('๐ ุจุฏุก ุฅุนุฏุงุฏ ูุดุฑูุน ุฃููุงู...\n');

// ุฎุทูุงุช ุงูุฅุนุฏุงุฏ
const setupSteps = [
  {
    name: 'ุชุซุจูุช ุงูุชุจุนูุงุช',
    command: 'npm install',
    description: 'ุชุซุจูุช ุฌููุน ุงูุญุฒู ุงููุทููุจุฉ'
  },
  {
    name: 'ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช',
    command: 'npx prisma generate && npx prisma db push',
    description: 'ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุฅูุดุงุก ุงูุฌุฏุงูู'
  },
  {
    name: 'ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ',
    command: 'npm run seed',
    description: 'ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูููููุน'
  }
];

// ุชูููุฐ ุงูุฎุทูุงุช
async function runSetup() {
  for (const step of setupSteps) {
    console.log(`๐ฆ ${step.name}...`);
    console.log(`   ${step.description}`);
    
    try {
      await executeCommand(step.command);
      console.log(`โ ${step.name} ููุชูู\n`);
    } catch (error) {
      console.error(`โ ุฎุทุฃ ูู ${step.name}:`, error.message);
      process.exit(1);
    }
  }

  // ุฅูุดุงุก ูุฌูุฏุงุช ูุทููุจุฉ
  createDirectories();
  
  // ุนุฑุถ ุฑุณุงูุฉ ุงูุฅููุงู
  showCompletionMessage();
}

function executeCommand(command) {
  return new Promise((resolve, reject) => {
    exec(command, (error, stdout, stderr) => {
      if (error) {
        reject(error);
      } else {
        console.log(stdout);
        resolve(stdout);
      }
    });
  });
}

function createDirectories() {
  const directories = [
    'public/uploads',
    'public/uploads/movies',
    'public/uploads/series',
    'public/uploads/shows',
    'public/uploads/mix',
    'public/uploads/avatars'
  ];

  directories.forEach(dir => {
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
      console.log(`๐ ุชู ุฅูุดุงุก ูุฌูุฏ: ${dir}`);
    }
  });
}

function showCompletionMessage() {
  console.log('\n๐ ุชู ุฅุนุฏุงุฏ ุงููุดุฑูุน ุจูุฌุงุญ!\n');
  console.log('๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ:');
  console.log('   1. npm run dev - ูุชุดุบูู ุงููุดุฑูุน');
  console.log('   2. ุงูุชุญ ุงููุชุตูุญ ุนูู: http://localhost:3000');
  console.log('   3. ููุญุฉ ุงูุฅุฏุงุฑุฉ: http://localhost:3000/admin');
  console.log('\n๐ ุจูุงูุงุช ุงูุฅุฏุงุฑุฉ:');
  console.log('   ุงูุจุฑูุฏ: admin@akwam.com');
  console.log('   ูููุฉ ุงููุฑูุฑ: admin123456');
  console.log('\nโจ ุงุณุชูุชุน ุจูููุนู ุงูุฌุฏูุฏ!');
}

// ุชุดุบูู ุงูุฅุนุฏุงุฏ
runSetup().catch(console.error);